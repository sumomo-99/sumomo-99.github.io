[touch, dd, head] ダミーファイルを作る
======================================

.. highlight:: console

テストなどである程度のファイルサイズのあるダミーファイルが必要になる場合があります。
ダミーファイルの作り方を４つ紹介します。

.. contents:: ダミーファイルの作り方
   :local:
   :depth: 1

空のファイル
------------

空 (ファイルサイズがゼロ)のファイルは、 :command:`touch` コマンドで作成できます。

empty.datという空のダミーファイルを作ります。

::

 $ touch empty.dat

:command:`file` コマンドで作ったファイルを確認してみます。

::

 $ file empty.dat
 empty.dat: empty

empty.datファイルはempty(空)ファイルのようです。

nullのファイル
--------------

**NUL** で埋めたファイルは、 :command:`dd` コマンドで作成できます。

サイズが10MBのNULで埋められたファイルを作ります。

::

 $ dd if=/dev/zero of=null.dat count=10 bs=1M
 10+0 レコード入力
 10+0 レコード出力
 10485760 バイト (10 MB) コピーされました、 0.0108068 秒、 970 MB/秒
 
:command:`hexdump` コマンドで作ったファイルを確認してみます。

::

 $ hexdump -C null.dat
 00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
 *
 00a00000

null.datファイルはNUL(0x00)で埋められているようです。

ランダなバイナリファイル
--------------------------

ランダムなバイナリファイルは、 :command:`head` コマンドと **/dev/urandom** デバイスを組み合わせることで作成できます。

サイズが10MBのランダムなバイナリファイルを作ります。

::

 $ head -c 10m /dev/urandom > random.dat
 
:command:`hexdump` コマンドで作ったファイルを確認してみます。

::

 $ hexdump -C random.dat | head
 00000000  91 46 d3 91 07 22 8e 69  58 d2 b6 e2 df c1 fa 95  |.F...".iX.......|
 00000010  42 bb 2d 11 dd a0 c3 50  9a 54 a4 0d 53 7a 12 09  |B.-....P.T..Sz..|
 00000020  ea f7 e8 d6 41 b0 61 ac  23 58 b3 9d 2d 60 b5 23  |....A.a.#X..-`.#|
 00000030  9c 3b 08 fc 4e 97 46 88  70 db d4 2c 03 ef 6b 6c  |.;..N.F.p..,..kl|
 00000040  78 c3 cc 30 53 03 b5 30  9b 14 0e 2e 4b 18 87 5c  |x..0S..0....K..\|
 00000050  aa 04 c7 39 67 d9 54 e7  7e 33 b6 1f 2a 25 6a 9d  |...9g.T.~3..*%j.|
 00000060  e8 ce f3 57 ad a1 d4 0a  db df f9 7e 1f 35 b7 7e  |...W.......~.5.~|
 00000070  ab d6 04 1a 14 a4 fe 18  8b ba cd 06 6f cc f9 01  |............o...|
 00000080  2f f1 6d 32 91 6a 04 ea  55 e2 f5 5a d5 1f f7 fe  |/.m2.j..U..Z....|
 00000090  59 66 aa 78 5c 3e d1 e0  b3 88 72 51 dd 3c 9f ae  |Yf.x\>....rQ.<..|

:command:`file` コマンドでも確認してみます。

::

 $ file random.dat
 random.dat: data

random.datファイルはバイナリファイルと認識されているようです。

可視化できるASCII形式ファイル
-----------------------------

可視化できるb **ASCII** 形式ファイルは、ランダムなバイナリファイルを **base64** でエンコードすることで作成できます。

サイズが10MBのASCII形式ファイルを作ってみます。

::

 $ head -c 10m /dev/urandom | base64 > random.txt

:command:`head` コマンドで確認をしてみます。

::

 $ head random.txt
 fSXw/u7mtGi4mO5r/lOFcUNlWvhDcJ83/FzoqQPt9skn5/ztFiHKMEZ8o6f5K/TdO9fe8KN4sWd5
 GwqGMEeLV6PMK8ryemGY58FZwl99zRr/Vp9GrqKzP45JO8rIZ/Negy/inOTNhHWM77Oj3fUqyCVD
 YifzrtKt22e75LNdpnksEOI0fYrmJ74dDSqMkh4PylGXGubwxsvgH48WRB410hGHhFun7zC++1SW
 +kA3lXRaQ0iOyJWadhkFHLyaidv8SX93o7Ku+jf6umoChyZb3HQxHthxaAY6ltncR5DIFK7WJaes
 q9CYCinsNctvWsj5G10eV7oukfjPI0L8G7KBE5Yg0388F6+M53SXCxNPZK+SnmdiUmwTWHc70/rh
 9thcSG2mEdPJgx+ygQNqgIUXlhU/v1PpsKBsF3d840Ku5T5LzSCizJBmYFLUjmUSU16m9jLDetnK
 qEZP4K75UARWJNU/5fhICMeDzGdpniqiyEIvRpmSfIOAP7f7N9w6wBf8XY2qlgavSyONQeOP3Vk1
 mbey9jm/ywqQ7hzPJ4InBV1kpErRu0+B0rsJnHNtYejlkVvHCk+YHXfasbKNDmkHrZxyjm4fHAYh
 MPJe3Iz+Q1yY4lbmb5k199ayRoQrHJmQYdlZIi7uwPXxDgREQhhKiwkDExJZjkvvcCgPEJ2Aq3V/
 JsIxwjD6bcjqbynoJkPaYAdjfmSOEL7XrOLfGYxKOp6/W1WKoZmvNjOkphLNju79urF8BLq6Rvjj

:command:`file` コマンドでも確認してみます。

::

 $ file random.txt
 random.txt: ASCII text

random.txtファイルはASCIIテキストファイルとして認識されているようです。
